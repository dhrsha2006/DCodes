<!DOCTYPE html>
<html>
    <head>
        <title>SnakeGame</title>
    </head>
    <body>
        <h1>SnakeGame on Python</h1>
        <h3>Code</h3>
        <pre>
import pygame
import random
pygame.init()
h=600
w=600
gamewin=pygame.display.set_mode((h,w))
pygame.display.set_caption("Snakes")
white=(255,255,255)
red=(255,0,0)
black=(0,0,0)
yellow=(255,255,0)
quit_game=False
game_over=False
score=0
snake_x=30
s=0
snake_y=30
food_x=random.randint(50,h-50)
food_y=random.randint(50,w-50)
velocity_x=2
velocity_y=3
snake_size1=10
snake_size2=20
clock=pygame.time.Clock()
snake_eatx=10
snake_eaty=10
fps=30
font=pygame.font.SysFont(None,55)
while quit_game==False:
    for event in pygame.event.get():
        if event.type==pygame.QUIT:
            quit_game=True
        if event.type==pygame.KEYDOWN:
            if event.key==pygame.K_RIGHT:
             velocity_x=5
             velocity_y=0
             s=snake_size1
             snake_size1=snake_size2
             snake_size2=s
             # if velocity_x<0:
             #     s = snake_size2
             #     snake_size2 = snake_size1
             #     snake_size1 = s
            if event.key==pygame.K_LEFT:
                velocity_x = -5
                velocity_y = 0
                s = snake_size1
                snake_size1 = snake_size2
                snake_size2 = s
                # if velocity_x > 0:
                #     s = snake_size2
                #     snake_size2 = snake_size1
                #     snake_size1 = s
            if event.key==pygame.K_UP:
                velocity_x = 0
                velocity_y = -5
                s = snake_size2
                snake_size2 = snake_size1
                snake_size1 = s
                # if velocity_y<0:
                #  s = snake_size2
                #  snake_size2 = snake_size1
                #  snake_size1 = s
            if event.key==pygame.K_DOWN:
                velocity_x = 0
                velocity_y = 5
                s = snake_size2
                snake_size2 = snake_size1
                snake_size1 = s
                # if velocity_y>0:
                #  s = snake_size2
                #  snake_size2 = snake_size1
                #  snake_size1 = s
    if abs(snake_x-food_x) < snake_eatx and abs(snake_y-food_y) < snake_eaty:
            score+=1
            snake_size2+=2
            snake_eatx+=1
            snake_eaty+=1
            food_x = random.randint(10, h-10)
            food_y = random.randint(10, w-10)
            print("Score:",score)
    gamewin.fill(black)
    screen_text = font.render("Score:"+str(score), True, white)
    gamewin.blit(screen_text, [10, 10])
    snake_x+=velocity_x
    snake_y+=velocity_y
    snake=pygame.draw.rect(gamewin,red,[snake_x,snake_y,snake_size1,snake_size2])
    food=pygame.draw.circle(gamewin,yellow,[food_x,food_y],7,7)
    pygame.display.update()
    clock.tick(fps)
pygame.quit()
quit()
        </pre>
        <h3>Image</h3>
        <img src="PICTURE" alt="Game Play ScreenShot" width="500px" height="500px">
        <h3>Explaination</h3>
        <p>This Python code implements a simple snake game using the Pygame library. It begins by importing necessary modules: pygame for game development and random for generating random numbers. The game window is created with a specified width and height. Basic colors like white, red, black, and yellow are defined for use throughout the game.The code initializes variables to control the game loop, track the score, and store the initial positions and sizes of the snake and food. It also sets the initial movement velocity of the snake. A clock object is created to regulate the game's frame rate.The main game loop starts. Within the loop, it handles user input events, primarily keyboard presses for controlling the snake's movement. The snake's position is updated based on its current velocity. The code checks for collisions between the snake and the food. If a collision occurs, the score is incremented, the food is repositioned randomly, and the snake's size is increased.The game window is filled with the background color (black). The current score is displayed on the screen using the created font object. The snake and food are drawn on the game window as rectangles and circles, respectively. The game window is updated to display the changes, and the frame rate is controlled using the clock object. The game loop continues until the user quits the game. Once the game is over, the Pygame library is quit. This code provides a basic framework for a snake game. It can be further enhanced by adding features like game over conditions, sound effects, and more challenging gameplay mechanics.</p>
     <h3>
     Audio Explanation
     </h3>
     <audio controls>
            <source src="SOURCE" type="audio/mpeg">
            Click here
        </audio>
    </body>
</html>
